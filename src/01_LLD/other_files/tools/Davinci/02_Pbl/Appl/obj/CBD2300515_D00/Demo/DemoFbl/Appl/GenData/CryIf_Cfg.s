	.file	"CryIf_Cfg.c"
.section .text,"ax",@progbits
.Ltext0:
	.global	CryIf_Key
.section .rodata,"a",@progbits
	.align 2
	.type	CryIf_Key, @object
	.size	CryIf_Key, 24
CryIf_Key:
	.word	2
	.byte	0
	.zero	3
	.word	0
	.byte	0
	.zero	3
	.word	1
	.byte	0
	.zero	3
	.global	CryIf_CryptoFunctions
	.align 2
	.type	CryIf_CryptoFunctions, @object
	.size	CryIf_CryptoFunctions, 68
CryIf_CryptoFunctions:
	.byte	0
	.zero	3
	.word	Crypto_30_LibCv_CancelJob
	.word	Crypto_30_LibCv_CertificateParse
	.word	Crypto_30_LibCv_CertificateVerify
	.word	Crypto_30_LibCv_KeyCopy
	.word	Crypto_30_LibCv_KeyDerive
	.word	Crypto_30_LibCv_KeyElementCopy
	.word	CryIf_KeyElementCopyPartial_Stub
	.word	Crypto_30_LibCv_KeyElementGet
	.word	Crypto_30_LibCv_KeyElementIdsGet
	.word	Crypto_30_LibCv_KeyElementSet
	.word	Crypto_30_LibCv_KeyExchangeCalcPubVal
	.word	Crypto_30_LibCv_KeyExchangeCalcSecret
	.word	Crypto_30_LibCv_KeyGenerate
	.word	Crypto_30_LibCv_KeyValidSet
	.word	Crypto_30_LibCv_ProcessJob
	.word	Crypto_30_LibCv_RandomSeed
	.global	CryIf_Channel
	.align 2
	.type	CryIf_Channel, @object
	.size	CryIf_Channel, 8
CryIf_Channel:
	.zero	8
.section .text,"ax",@progbits
.Letext0:
	.file 1 "../../../BSW/_Common/Platform_Types.h"
	.file 2 "../../../BSW/_Common/Std_Types.h"
	.file 3 "../../../BSW/Csm/Csm_Types.h"
	.file 4 "../../../../CBD2300515_D00/Demo/DemoFbl/Appl/GenData/CryIf_Cfg.h"
	.file 5 "../../../../CBD2300515_D00/Demo/DemoFbl/Appl/GenData/CryIf_Cfg.c"
.section .debug_info,"",@progbits
.Ldebug_info0:
	.uaword	0x12e5
	.uahalf	0x3
	.uaword	.Ldebug_abbrev0
	.byte	0x4
	.uleb128 0x1
	.string	"GNU C 4.9.4 build on 2020-09-01 -mlicense-dir=c:\\hightec\\toolchains\\tricore\\v4.9.4.1\\bin\\../lib/gcc/tricore/4.9.4/../../../../licenses -mtc162 -g -O1 -ffunction-sections -fno-common -fomit-frame-pointer"
	.byte	0x1
	.string	"../../../../CBD2300515_D00/Demo/DemoFbl/Appl/GenData/CryIf_Cfg.c"
	.string	"D:\\\\Vector\\\\CBD2300515_D00\\\\Demo\\\\DemoFbl\\\\Appl"
	.uaword	.Ldebug_line0
	.uleb128 0x2
	.string	"boolean"
	.byte	0x1
	.byte	0x65
	.uaword	0x15c
	.uleb128 0x3
	.byte	0x1
	.byte	0x8
	.string	"unsigned char"
	.uleb128 0x3
	.byte	0x1
	.byte	0x6
	.string	"signed char"
	.uleb128 0x2
	.string	"uint8"
	.byte	0x1
	.byte	0x68
	.uaword	0x15c
	.uleb128 0x3
	.byte	0x2
	.byte	0x5
	.string	"short int"
	.uleb128 0x3
	.byte	0x2
	.byte	0x7
	.string	"short unsigned int"
	.uleb128 0x3
	.byte	0x4
	.byte	0x5
	.string	"long int"
	.uleb128 0x2
	.string	"uint32"
	.byte	0x1
	.byte	0x6c
	.uaword	0x1c6
	.uleb128 0x3
	.byte	0x4
	.byte	0x7
	.string	"long unsigned int"
	.uleb128 0x3
	.byte	0x8
	.byte	0x5
	.string	"long long int"
	.uleb128 0x3
	.byte	0x8
	.byte	0x7
	.string	"long long unsigned int"
	.uleb128 0x3
	.byte	0x4
	.byte	0x4
	.string	"float"
	.uleb128 0x3
	.byte	0x8
	.byte	0x4
	.string	"double"
	.uleb128 0x2
	.string	"Std_ReturnType"
	.byte	0x2
	.byte	0x78
	.uaword	0x17c
	.uleb128 0x4
	.byte	0x4
	.uaword	0x235
	.uleb128 0x5
	.uaword	0x17c
	.uleb128 0x6
	.string	"Crypto_JobStateType"
	.byte	0x3
	.uahalf	0x111
	.uaword	0x17c
	.uleb128 0x6
	.string	"Crypto_ServiceInfoType"
	.byte	0x3
	.uahalf	0x117
	.uaword	0x17c
	.uleb128 0x6
	.string	"Crypto_AlgorithmFamilyType"
	.byte	0x3
	.uahalf	0x163
	.uaword	0x17c
	.uleb128 0x6
	.string	"Crypto_AlgorithmSecondaryFamilyType"
	.byte	0x3
	.uahalf	0x164
	.uaword	0x17c
	.uleb128 0x6
	.string	"Crypto_AlgorithmModeType"
	.byte	0x3
	.uahalf	0x208
	.uaword	0x17c
	.uleb128 0x6
	.string	"Crypto_InputOutputRedirectionConfigType"
	.byte	0x3
	.uahalf	0x250
	.uaword	0x17c
	.uleb128 0x7
	.byte	0xc
	.byte	0x3
	.uahalf	0x258
	.uaword	0x369
	.uleb128 0x8
	.string	"family"
	.byte	0x3
	.uahalf	0x25a
	.uaword	0x275
	.byte	0
	.uleb128 0x8
	.string	"keyLength"
	.byte	0x3
	.uahalf	0x25b
	.uaword	0x1b8
	.byte	0x4
	.uleb128 0x8
	.string	"mode"
	.byte	0x3
	.uahalf	0x25c
	.uaword	0x2c4
	.byte	0x8
	.uleb128 0x8
	.string	"secondaryFamily"
	.byte	0x3
	.uahalf	0x25d
	.uaword	0x298
	.byte	0x9
	.byte	0
	.uleb128 0x6
	.string	"Crypto_AlgorithmInfoType"
	.byte	0x3
	.uahalf	0x25e
	.uaword	0x315
	.uleb128 0x6
	.string	"Crypto_OperationModeType"
	.byte	0x3
	.uahalf	0x262
	.uaword	0x17c
	.uleb128 0x6
	.string	"Crypto_ProcessingType"
	.byte	0x3
	.uahalf	0x280
	.uaword	0x17c
	.uleb128 0x6
	.string	"Crypto_VerifyResultType"
	.byte	0x3
	.uahalf	0x289
	.uaword	0x17c
	.uleb128 0x7
	.byte	0x14
	.byte	0x3
	.uahalf	0x2a6
	.uaword	0x42d
	.uleb128 0x8
	.string	"resultLength"
	.byte	0x3
	.uahalf	0x2a8
	.uaword	0x1b8
	.byte	0
	.uleb128 0x8
	.string	"service"
	.byte	0x3
	.uahalf	0x2a9
	.uaword	0x256
	.byte	0x4
	.uleb128 0x8
	.string	"algorithm"
	.byte	0x3
	.uahalf	0x2aa
	.uaword	0x369
	.byte	0x8
	.byte	0
	.uleb128 0x6
	.string	"Crypto_PrimitiveInfoType"
	.byte	0x3
	.uahalf	0x2ab
	.uaword	0x3e9
	.uleb128 0x7
	.byte	0x14
	.byte	0x3
	.uahalf	0x2af
	.uaword	0x4e5
	.uleb128 0x8
	.string	"callbackId"
	.byte	0x3
	.uahalf	0x2b1
	.uaword	0x1b8
	.byte	0
	.uleb128 0x8
	.string	"primitiveInfo"
	.byte	0x3
	.uahalf	0x2b2
	.uaword	0x4e5
	.byte	0x4
	.uleb128 0x8
	.string	"secureCounterId"
	.byte	0x3
	.uahalf	0x2b3
	.uaword	0x1b8
	.byte	0x8
	.uleb128 0x9
	.uaword	.LASF0
	.byte	0x3
	.uahalf	0x2b4
	.uaword	0x1b8
	.byte	0xc
	.uleb128 0x8
	.string	"processingType"
	.byte	0x3
	.uahalf	0x2b5
	.uaword	0x3ab
	.byte	0x10
	.uleb128 0x8
	.string	"callbackUpdateNotification"
	.byte	0x3
	.uahalf	0x2b6
	.uaword	0x14d
	.byte	0x11
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.uaword	0x4eb
	.uleb128 0x5
	.uaword	0x42d
	.uleb128 0x6
	.string	"Crypto_JobPrimitiveInfoType"
	.byte	0x3
	.uahalf	0x2b7
	.uaword	0x44e
	.uleb128 0x7
	.byte	0x38
	.byte	0x3
	.uahalf	0x2ba
	.uaword	0x667
	.uleb128 0x8
	.string	"inputPtr"
	.byte	0x3
	.uahalf	0x2bc
	.uaword	0x22f
	.byte	0
	.uleb128 0x8
	.string	"inputLength"
	.byte	0x3
	.uahalf	0x2bd
	.uaword	0x1b8
	.byte	0x4
	.uleb128 0x8
	.string	"secondaryInputPtr"
	.byte	0x3
	.uahalf	0x2be
	.uaword	0x22f
	.byte	0x8
	.uleb128 0x8
	.string	"secondaryInputLength"
	.byte	0x3
	.uahalf	0x2bf
	.uaword	0x1b8
	.byte	0xc
	.uleb128 0x8
	.string	"tertiaryInputPtr"
	.byte	0x3
	.uahalf	0x2c0
	.uaword	0x22f
	.byte	0x10
	.uleb128 0x8
	.string	"tertiaryInputLength"
	.byte	0x3
	.uahalf	0x2c1
	.uaword	0x1b8
	.byte	0x14
	.uleb128 0x8
	.string	"outputPtr"
	.byte	0x3
	.uahalf	0x2c3
	.uaword	0x667
	.byte	0x18
	.uleb128 0x8
	.string	"outputLengthPtr"
	.byte	0x3
	.uahalf	0x2c4
	.uaword	0x66d
	.byte	0x1c
	.uleb128 0x8
	.string	"secondaryOutputPtr"
	.byte	0x3
	.uahalf	0x2c5
	.uaword	0x667
	.byte	0x20
	.uleb128 0x8
	.string	"secondaryOutputLengthPtr"
	.byte	0x3
	.uahalf	0x2c6
	.uaword	0x66d
	.byte	0x24
	.uleb128 0x8
	.string	"verifyPtr"
	.byte	0x3
	.uahalf	0x2cb
	.uaword	0x673
	.byte	0x28
	.uleb128 0x8
	.string	"mode"
	.byte	0x3
	.uahalf	0x2cf
	.uaword	0x38a
	.byte	0x2c
	.uleb128 0x9
	.uaword	.LASF0
	.byte	0x3
	.uahalf	0x2d2
	.uaword	0x1b8
	.byte	0x30
	.uleb128 0x8
	.string	"targetCryIfKeyId"
	.byte	0x3
	.uahalf	0x2d3
	.uaword	0x1b8
	.byte	0x34
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.uaword	0x17c
	.uleb128 0x4
	.byte	0x4
	.uaword	0x1b8
	.uleb128 0x4
	.byte	0x4
	.uaword	0x3c9
	.uleb128 0x6
	.string	"Crypto_JobPrimitiveInputOutputType"
	.byte	0x3
	.uahalf	0x2d4
	.uaword	0x514
	.uleb128 0x7
	.byte	0x8
	.byte	0x3
	.uahalf	0x2d6
	.uaword	0x6d2
	.uleb128 0x8
	.string	"jobId"
	.byte	0x3
	.uahalf	0x2d8
	.uaword	0x1b8
	.byte	0
	.uleb128 0x8
	.string	"jobPriority"
	.byte	0x3
	.uahalf	0x2d9
	.uaword	0x1b8
	.byte	0x4
	.byte	0
	.uleb128 0x6
	.string	"Crypto_JobInfoType"
	.byte	0x3
	.uahalf	0x2da
	.uaword	0x6a4
	.uleb128 0x7
	.byte	0x2c
	.byte	0x3
	.uahalf	0x2dd
	.uaword	0x835
	.uleb128 0x8
	.string	"redirectionConfig"
	.byte	0x3
	.uahalf	0x2df
	.uaword	0x2e5
	.byte	0
	.uleb128 0x8
	.string	"inputKeyId"
	.byte	0x3
	.uahalf	0x2e0
	.uaword	0x1b8
	.byte	0x4
	.uleb128 0x8
	.string	"inputKeyElementId"
	.byte	0x3
	.uahalf	0x2e1
	.uaword	0x1b8
	.byte	0x8
	.uleb128 0x8
	.string	"secondaryInputKeyId"
	.byte	0x3
	.uahalf	0x2e2
	.uaword	0x1b8
	.byte	0xc
	.uleb128 0x8
	.string	"secondaryInputKeyElementId"
	.byte	0x3
	.uahalf	0x2e3
	.uaword	0x1b8
	.byte	0x10
	.uleb128 0x8
	.string	"tertiaryInputKeyId"
	.byte	0x3
	.uahalf	0x2e4
	.uaword	0x1b8
	.byte	0x14
	.uleb128 0x8
	.string	"tertiaryInputKeyElementId"
	.byte	0x3
	.uahalf	0x2e5
	.uaword	0x1b8
	.byte	0x18
	.uleb128 0x8
	.string	"outputKeyId"
	.byte	0x3
	.uahalf	0x2e6
	.uaword	0x1b8
	.byte	0x1c
	.uleb128 0x8
	.string	"outputKeyElementId"
	.byte	0x3
	.uahalf	0x2e7
	.uaword	0x1b8
	.byte	0x20
	.uleb128 0x8
	.string	"secondaryOutputKeyId"
	.byte	0x3
	.uahalf	0x2e8
	.uaword	0x1b8
	.byte	0x24
	.uleb128 0x8
	.string	"secondaryOutputKeyElementId"
	.byte	0x3
	.uahalf	0x2e9
	.uaword	0x1b8
	.byte	0x28
	.byte	0
	.uleb128 0x6
	.string	"Crypto_JobRedirectionInfoType"
	.byte	0x3
	.uahalf	0x2ea
	.uaword	0x6ed
	.uleb128 0x7
	.byte	0x90
	.byte	0x3
	.uahalf	0x2ed
	.uaword	0x94e
	.uleb128 0x8
	.string	"jobId"
	.byte	0x3
	.uahalf	0x2f0
	.uaword	0x1b8
	.byte	0
	.uleb128 0x8
	.string	"jobState"
	.byte	0x3
	.uahalf	0x2f1
	.uaword	0x23a
	.byte	0x4
	.uleb128 0x8
	.string	"jobPrimitiveInputOutput"
	.byte	0x3
	.uahalf	0x2f2
	.uaword	0x679
	.byte	0x8
	.uleb128 0x8
	.string	"jobPrimitiveInfo"
	.byte	0x3
	.uahalf	0x2f3
	.uaword	0x94e
	.byte	0x40
	.uleb128 0x8
	.string	"jobInfo"
	.byte	0x3
	.uahalf	0x2f4
	.uaword	0x959
	.byte	0x44
	.uleb128 0x8
	.string	"cryptoKeyId"
	.byte	0x3
	.uahalf	0x2f5
	.uaword	0x1b8
	.byte	0x48
	.uleb128 0x8
	.string	"jobRedirectionInfoRef"
	.byte	0x3
	.uahalf	0x2f8
	.uaword	0x964
	.byte	0x4c
	.uleb128 0x8
	.string	"targetCryptoKeyId"
	.byte	0x3
	.uahalf	0x2fa
	.uaword	0x1b8
	.byte	0x50
	.uleb128 0x8
	.string	"state"
	.byte	0x3
	.uahalf	0x2fd
	.uaword	0x23a
	.byte	0x54
	.uleb128 0x8
	.string	"PrimitiveInputOutput"
	.byte	0x3
	.uahalf	0x2fe
	.uaword	0x679
	.byte	0x58
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.uaword	0x954
	.uleb128 0x5
	.uaword	0x4f0
	.uleb128 0x4
	.byte	0x4
	.uaword	0x95f
	.uleb128 0x5
	.uaword	0x6d2
	.uleb128 0x4
	.byte	0x4
	.uaword	0x835
	.uleb128 0x6
	.string	"Crypto_JobType"
	.byte	0x3
	.uahalf	0x300
	.uaword	0x85b
	.uleb128 0x6
	.string	"CryIf_ProcessJobFuncType"
	.byte	0x4
	.uahalf	0x23c
	.uaword	0x9a2
	.uleb128 0x4
	.byte	0x4
	.uaword	0x9a8
	.uleb128 0xa
	.byte	0x1
	.uaword	0x219
	.uaword	0x9bd
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x9bd
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.uaword	0x96a
	.uleb128 0x6
	.string	"CryIf_KeyElementSetFuncType"
	.byte	0x4
	.uahalf	0x23d
	.uaword	0x9e7
	.uleb128 0x4
	.byte	0x4
	.uaword	0x9ed
	.uleb128 0xa
	.byte	0x1
	.uaword	0x219
	.uaword	0xa0c
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x22f
	.uleb128 0xb
	.uaword	0x1b8
	.byte	0
	.uleb128 0x6
	.string	"CryIf_KeyValidSetFuncType"
	.byte	0x4
	.uahalf	0x23e
	.uaword	0xa2e
	.uleb128 0x4
	.byte	0x4
	.uaword	0xa34
	.uleb128 0xa
	.byte	0x1
	.uaword	0x219
	.uaword	0xa44
	.uleb128 0xb
	.uaword	0x1b8
	.byte	0
	.uleb128 0x6
	.string	"CryIf_KeyElementGetFuncType"
	.byte	0x4
	.uahalf	0x23f
	.uaword	0xa68
	.uleb128 0x4
	.byte	0x4
	.uaword	0xa6e
	.uleb128 0xa
	.byte	0x1
	.uaword	0x219
	.uaword	0xa8d
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x667
	.uleb128 0xb
	.uaword	0x66d
	.byte	0
	.uleb128 0x6
	.string	"CryIf_KeyElementCopyFuncType"
	.byte	0x4
	.uahalf	0x240
	.uaword	0xab2
	.uleb128 0x4
	.byte	0x4
	.uaword	0xab8
	.uleb128 0xa
	.byte	0x1
	.uaword	0x219
	.uaword	0xad7
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x1b8
	.byte	0
	.uleb128 0x6
	.string	"CryIf_KeyElementCopyPartialFuncType"
	.byte	0x4
	.uahalf	0x241
	.uaword	0xb03
	.uleb128 0x4
	.byte	0x4
	.uaword	0xb09
	.uleb128 0xa
	.byte	0x1
	.uaword	0x219
	.uaword	0xb37
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x1b8
	.byte	0
	.uleb128 0x6
	.string	"CryIf_KeyElementIdsGetFuncType"
	.byte	0x4
	.uahalf	0x242
	.uaword	0xb5e
	.uleb128 0x4
	.byte	0x4
	.uaword	0xb64
	.uleb128 0xa
	.byte	0x1
	.uaword	0x219
	.uaword	0xb7e
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x66d
	.uleb128 0xb
	.uaword	0x66d
	.byte	0
	.uleb128 0x6
	.string	"CryIf_KeyCopyFuncType"
	.byte	0x4
	.uahalf	0x243
	.uaword	0xb9c
	.uleb128 0x4
	.byte	0x4
	.uaword	0xba2
	.uleb128 0xa
	.byte	0x1
	.uaword	0x219
	.uaword	0xbb7
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x1b8
	.byte	0
	.uleb128 0x6
	.string	"CryIf_RandomSeedFuncType"
	.byte	0x4
	.uahalf	0x244
	.uaword	0xbd8
	.uleb128 0x4
	.byte	0x4
	.uaword	0xbde
	.uleb128 0xa
	.byte	0x1
	.uaword	0x219
	.uaword	0xbf8
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x22f
	.uleb128 0xb
	.uaword	0x1b8
	.byte	0
	.uleb128 0x6
	.string	"CryIf_KeyGenerateFuncType"
	.byte	0x4
	.uahalf	0x245
	.uaword	0xa2e
	.uleb128 0x6
	.string	"CryIf_KeyDeriveFuncType"
	.byte	0x4
	.uahalf	0x246
	.uaword	0xb9c
	.uleb128 0x6
	.string	"CryIf_KeyExchangeCalcPubValFuncType"
	.byte	0x4
	.uahalf	0x247
	.uaword	0xc66
	.uleb128 0x4
	.byte	0x4
	.uaword	0xc6c
	.uleb128 0xa
	.byte	0x1
	.uaword	0x219
	.uaword	0xc86
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x667
	.uleb128 0xb
	.uaword	0x66d
	.byte	0
	.uleb128 0x6
	.string	"CryIf_KeyExchangeCalcSecretFuncType"
	.byte	0x4
	.uahalf	0x248
	.uaword	0xbd8
	.uleb128 0x6
	.string	"CryIf_CertificateParseFuncType"
	.byte	0x4
	.uahalf	0x249
	.uaword	0xa2e
	.uleb128 0x6
	.string	"CryIf_CertificateVerifyFuncType"
	.byte	0x4
	.uahalf	0x24a
	.uaword	0xd01
	.uleb128 0x4
	.byte	0x4
	.uaword	0xd07
	.uleb128 0xa
	.byte	0x1
	.uaword	0x219
	.uaword	0xd21
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x1b8
	.uleb128 0xb
	.uaword	0x673
	.byte	0
	.uleb128 0x6
	.string	"CryIf_CancelJobFuncType"
	.byte	0x4
	.uahalf	0x24b
	.uaword	0x9a2
	.uleb128 0x6
	.string	"CryIf_CryptoFunctionsIdxOfChannelType"
	.byte	0x4
	.uahalf	0x26b
	.uaword	0x17c
	.uleb128 0x6
	.string	"CryIf_DriverObjectRefOfChannelType"
	.byte	0x4
	.uahalf	0x26e
	.uaword	0x1b8
	.uleb128 0x6
	.string	"CryIf_IdOfChannelType"
	.byte	0x4
	.uahalf	0x271
	.uaword	0x17c
	.uleb128 0x6
	.string	"CryIf_SupportsKeyElementCopyPartialOfCryptoFunctionsType"
	.byte	0x4
	.uahalf	0x274
	.uaword	0x14d
	.uleb128 0x6
	.string	"CryIf_CryptoFunctionsIdxOfKeyType"
	.byte	0x4
	.uahalf	0x277
	.uaword	0x17c
	.uleb128 0x6
	.string	"CryIf_RefOfKeyType"
	.byte	0x4
	.uahalf	0x27a
	.uaword	0x1b8
	.uleb128 0xc
	.string	"sCryIf_ChannelType"
	.byte	0x8
	.byte	0x4
	.uahalf	0x2a2
	.uaword	0xeb7
	.uleb128 0x8
	.string	"DriverObjectRefOfChannel"
	.byte	0x4
	.uahalf	0x2a4
	.uaword	0xd6f
	.byte	0
	.uleb128 0x8
	.string	"CryptoFunctionsIdxOfChannel"
	.byte	0x4
	.uahalf	0x2a5
	.uaword	0xd41
	.byte	0x4
	.uleb128 0x8
	.string	"IdOfChannel"
	.byte	0x4
	.uahalf	0x2a6
	.uaword	0xd9a
	.byte	0x5
	.byte	0
	.uleb128 0x6
	.string	"CryIf_ChannelType"
	.byte	0x4
	.uahalf	0x2a7
	.uaword	0xe3e
	.uleb128 0xc
	.string	"sCryIf_CryptoFunctionsType"
	.byte	0x44
	.byte	0x4
	.uahalf	0x2aa
	.uaword	0x11b9
	.uleb128 0x8
	.string	"SupportsKeyElementCopyPartialOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2ac
	.uaword	0xdb8
	.byte	0
	.uleb128 0x8
	.string	"CancelJobOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2ad
	.uaword	0xd21
	.byte	0x4
	.uleb128 0x8
	.string	"CertificateParseOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2ae
	.uaword	0xcb2
	.byte	0x8
	.uleb128 0x8
	.string	"CertificateVerifyOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2af
	.uaword	0xcd9
	.byte	0xc
	.uleb128 0x8
	.string	"KeyCopyOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2b0
	.uaword	0xb7e
	.byte	0x10
	.uleb128 0x8
	.string	"KeyDeriveOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2b1
	.uaword	0xc1a
	.byte	0x14
	.uleb128 0x8
	.string	"KeyElementCopyOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2b2
	.uaword	0xa8d
	.byte	0x18
	.uleb128 0x8
	.string	"KeyElementCopyPartialOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2b3
	.uaword	0xad7
	.byte	0x1c
	.uleb128 0x8
	.string	"KeyElementGetOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2b4
	.uaword	0xa44
	.byte	0x20
	.uleb128 0x8
	.string	"KeyElementIdsGetOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2b5
	.uaword	0xb37
	.byte	0x24
	.uleb128 0x8
	.string	"KeyElementSetOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2b6
	.uaword	0x9c3
	.byte	0x28
	.uleb128 0x8
	.string	"KeyExchangeCalcPubValOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2b7
	.uaword	0xc3a
	.byte	0x2c
	.uleb128 0x8
	.string	"KeyExchangeCalcSecretOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2b8
	.uaword	0xc86
	.byte	0x30
	.uleb128 0x8
	.string	"KeyGenerateOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2b9
	.uaword	0xbf8
	.byte	0x34
	.uleb128 0x8
	.string	"KeyValidSetOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2ba
	.uaword	0xa0c
	.byte	0x38
	.uleb128 0x8
	.string	"ProcessJobOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2bb
	.uaword	0x981
	.byte	0x3c
	.uleb128 0x8
	.string	"RandomSeedOfCryptoFunctions"
	.byte	0x4
	.uahalf	0x2bc
	.uaword	0xbb7
	.byte	0x40
	.byte	0
	.uleb128 0x6
	.string	"CryIf_CryptoFunctionsType"
	.byte	0x4
	.uahalf	0x2bd
	.uaword	0xed1
	.uleb128 0xc
	.string	"sCryIf_KeyType"
	.byte	0x8
	.byte	0x4
	.uahalf	0x2c3
	.uaword	0x1227
	.uleb128 0x8
	.string	"RefOfKey"
	.byte	0x4
	.uahalf	0x2c5
	.uaword	0xe23
	.byte	0
	.uleb128 0x8
	.string	"CryptoFunctionsIdxOfKey"
	.byte	0x4
	.uahalf	0x2c6
	.uaword	0xdf9
	.byte	0x4
	.byte	0
	.uleb128 0x6
	.string	"CryIf_KeyType"
	.byte	0x4
	.uahalf	0x2c7
	.uaword	0x11db
	.uleb128 0x3
	.byte	0x4
	.byte	0x7
	.string	"sizetype"
	.uleb128 0x3
	.byte	0x1
	.byte	0x6
	.string	"char"
	.uleb128 0xd
	.uaword	0xeb7
	.uaword	0x1261
	.uleb128 0xe
	.uaword	0x123d
	.byte	0
	.byte	0
	.uleb128 0xf
	.string	"CryIf_Channel"
	.byte	0x5
	.byte	0x83
	.uaword	0x127d
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.uaword	CryIf_Channel
	.uleb128 0x5
	.uaword	0x1251
	.uleb128 0xd
	.uaword	0x11b9
	.uaword	0x1292
	.uleb128 0xe
	.uaword	0x123d
	.byte	0
	.byte	0
	.uleb128 0xf
	.string	"CryIf_CryptoFunctions"
	.byte	0x5
	.byte	0xa9
	.uaword	0x12b6
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.uaword	CryIf_CryptoFunctions
	.uleb128 0x5
	.uaword	0x1282
	.uleb128 0xd
	.uaword	0x1227
	.uaword	0x12cb
	.uleb128 0xe
	.uaword	0x123d
	.byte	0x2
	.byte	0
	.uleb128 0xf
	.string	"CryIf_Key"
	.byte	0x5
	.byte	0xc1
	.uaword	0x12e3
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.uaword	CryIf_Key
	.uleb128 0x5
	.uaword	0x12bb
	.byte	0
.section .debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0x8
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1b
	.uleb128 0x8
	.uleb128 0x10
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x2
	.uleb128 0xa
	.byte	0
	.byte	0
	.byte	0
.section .debug_aranges,"",@progbits
	.uaword	0x14
	.uahalf	0x2
	.uaword	.Ldebug_info0
	.byte	0x4
	.byte	0
	.uahalf	0
	.uahalf	0
	.uaword	0
	.uaword	0
.section .debug_line,"",@progbits
.Ldebug_line0:
.section .debug_str,"",@progbits
.LASF0:
	.string	"cryIfKeyId"
	.extern	Crypto_30_LibCv_RandomSeed,STT_FUNC,0
	.extern	Crypto_30_LibCv_ProcessJob,STT_FUNC,0
	.extern	Crypto_30_LibCv_KeyValidSet,STT_FUNC,0
	.extern	Crypto_30_LibCv_KeyGenerate,STT_FUNC,0
	.extern	Crypto_30_LibCv_KeyExchangeCalcSecret,STT_FUNC,0
	.extern	Crypto_30_LibCv_KeyExchangeCalcPubVal,STT_FUNC,0
	.extern	Crypto_30_LibCv_KeyElementSet,STT_FUNC,0
	.extern	Crypto_30_LibCv_KeyElementIdsGet,STT_FUNC,0
	.extern	Crypto_30_LibCv_KeyElementGet,STT_FUNC,0
	.extern	CryIf_KeyElementCopyPartial_Stub,STT_FUNC,0
	.extern	Crypto_30_LibCv_KeyElementCopy,STT_FUNC,0
	.extern	Crypto_30_LibCv_KeyDerive,STT_FUNC,0
	.extern	Crypto_30_LibCv_KeyCopy,STT_FUNC,0
	.extern	Crypto_30_LibCv_CertificateVerify,STT_FUNC,0
	.extern	Crypto_30_LibCv_CertificateParse,STT_FUNC,0
	.extern	Crypto_30_LibCv_CancelJob,STT_FUNC,0
	.ident	"GCC: (HighTec Release HDP-v4.9.4.1-11fcedf) 4.9.4 build on 2020-09-01"
